{"componentChunkName":"component---src-templates-doc-js","path":"/math/poly/inv-tri-func/","result":{"data":{"mdx":{"id":"ac937c23-e877-5977-9a6a-53d64bb5c44b","wordCount":{"words":13},"fields":{"slug":"/math/poly/inv-tri-func/"},"excerpt":"Description 给定多项式   ，求模   意义下的   与   。 Method 仿照求多项式   的方法，对反三角函数求导再积分可得： 那么代入   就有： 直接按式子求就可以了。 Code","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"多项式反三角函数\",\n  \"tags\": [\"math\", \"polynomial\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Description\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"className\": \"anchor\",\n    \"id\": \"description\"\n  })), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#description\",\n    \"aria-label\": \"description permalink\",\n    \"className\": \"anchorLink after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"\\u7ED9\\u5B9A\\u591A\\u9879\\u5F0F \", mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"math math-inline\"\n  }), \"\\\\(\", \"f\\\\left(x\\\\right)\", \"\\\\)\"), \" \\uFF0C\\u6C42\\u6A21 \", mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"math math-inline\"\n  }), \"\\\\(\", \"x^{n}\", \"\\\\)\"), \" \\u610F\\u4E49\\u4E0B\\u7684 \", mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"math math-inline\"\n  }), \"\\\\(\", \"\\\\arcsin{f\\\\left(x\\\\right)}, \\\\arccos{f\\\\left(x\\\\right)}\", \"\\\\)\"), \" \\u4E0E \", mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"math math-inline\"\n  }), \"\\\\(\", \"\\\\arctan{f\\\\left(x\\\\right)}\", \"\\\\)\"), \" \\u3002\"), mdx(\"h2\", null, \"Method\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"className\": \"anchor\",\n    \"id\": \"method\"\n  })), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#method\",\n    \"aria-label\": \"method permalink\",\n    \"className\": \"anchorLink after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"\\u4EFF\\u7167\\u6C42\\u591A\\u9879\\u5F0F \", mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"math math-inline\"\n  }), \"\\\\(\", \"\\\\ln\", \"\\\\)\"), \" \\u7684\\u65B9\\u6CD5\\uFF0C\\u5BF9\\u53CD\\u4E09\\u89D2\\u51FD\\u6570\\u6C42\\u5BFC\\u518D\\u79EF\\u5206\\u53EF\\u5F97\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"math math-display\"\n  }, \"\\\\[\", \"\\\\begin{aligned}\\n\\t\\\\frac{\\\\mathrm{d}}{\\\\mathrm{d} x} \\\\arcsin{x} &= \\\\frac{1}{\\\\sqrt{1 - x^{2}}} \\\\\\\\\\n\\t\\\\arcsin{x} &= \\\\int \\\\frac{1}{\\\\sqrt{1 - x^{2}}} \\\\mathrm{d} x \\\\\\\\\\n\\t\\\\frac{\\\\mathrm{d}}{\\\\mathrm{d} x} \\\\arccos{x} &= - \\\\frac{1}{\\\\sqrt{1 - x^{2}}} \\\\\\\\\\n\\t\\\\arccos{x} &= - \\\\int \\\\frac{1}{\\\\sqrt{1 - x^{2}}} \\\\mathrm{d} x \\\\\\\\\\n\\t\\\\frac{\\\\mathrm{d}}{\\\\mathrm{d} x} \\\\arctan{x} &= \\\\frac{1}{1 + x^{2}} \\\\\\\\\\n\\t\\\\arctan{x} &= \\\\int \\\\frac{1}{1 + x^{2}} \\\\mathrm{d} x\\n\\\\end{aligned}\", \"\\\\]\"), mdx(\"p\", null, \"\\u90A3\\u4E48\\u4EE3\\u5165 \", mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"math math-inline\"\n  }), \"\\\\(\", \"f\\\\left(x\\\\right)\", \"\\\\)\"), \" \\u5C31\\u6709\\uFF1A\"), mdx(\"div\", {\n    \"className\": \"math math-display\"\n  }, \"\\\\[\", \"\\\\begin{aligned}\\n\\t\\\\frac{\\\\mathrm{d}}{\\\\mathrm{d} x} \\\\arcsin{f\\\\left(x\\\\right)} &= \\\\frac{f'\\\\left(x\\\\right)}{\\\\sqrt{1 - f^{2}\\\\left(x\\\\right)}} \\\\\\\\\\n\\t\\\\arcsin{f\\\\left(x\\\\right)} &= \\\\int \\\\frac{f'\\\\left(x\\\\right)}{\\\\sqrt{1 - f^{2}\\\\left(x\\\\right)}} \\\\mathrm{d} x \\\\\\\\\\n\\t\\\\frac{\\\\mathrm{d}}{\\\\mathrm{d} x} \\\\arccos{f\\\\left(x\\\\right)} &= - \\\\frac{f'\\\\left(x\\\\right)}{\\\\sqrt{1 - f^{2}\\\\left(x\\\\right)}} \\\\\\\\\\n\\t\\\\arccos{f\\\\left(x\\\\right)} &= - \\\\int \\\\frac{f'\\\\left(x\\\\right)}{\\\\sqrt{1 - f^{2}\\\\left(x\\\\right)}} \\\\mathrm{d} x \\\\\\\\\\n\\t\\\\frac{\\\\mathrm{d}}{\\\\mathrm{d} x} \\\\arctan{f\\\\left(x\\\\right)} &= \\\\frac{f'\\\\left(x\\\\right)}{1 + f^{2}\\\\left(x\\\\right)} \\\\\\\\\\n\\t\\\\arctan{f\\\\left(x\\\\right)} &= \\\\int \\\\frac{f'\\\\left(x\\\\right)}{1 + f^{2}\\\\left(x\\\\right)} \\\\mathrm{d} x\\n\\\\end{aligned}\", \"\\\\]\"), mdx(\"p\", null, \"\\u76F4\\u63A5\\u6309\\u5F0F\\u5B50\\u6C42\\u5C31\\u53EF\\u4EE5\\u4E86\\u3002\"), mdx(\"h2\", null, \"Code\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"className\": \"anchor\",\n    \"id\": \"code\"\n  })), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#code\",\n    \"aria-label\": \"code permalink\",\n    \"className\": \"anchorLink after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"div\", {\n    \"header\": \"??? \\\"多项式反三角函数\\\"\\n\",\n    \"summary\": \"<p>多项式反三角函数</p>\",\n    \"className\": \"details\"\n  }, mdx(\"details\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"details-note\"\n  }), mdx(\"summary\", _extends({\n    parentName: \"details\"\n  }, {\n    \"className\": \"summary-note\"\n  }), mdx(\"p\", {\n    parentName: \"summary\"\n  }, \"\\u591A\\u9879\\u5F0F\\u53CD\\u4E09\\u89D2\\u51FD\\u6570\")), mdx(\"pre\", _extends({\n    parentName: \"details\"\n  }, {\n    \"className\": \"grvsc-container dark-default-dark\",\n    \"data-language\": \"cpp\",\n    \"data-index\": \"0\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"grvsc-code\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"constexpr\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" maxn = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"262144\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"constexpr\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" mod = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"998244353\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"using\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"i64\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"long\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"long\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"using\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[maxn];\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"using\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" *\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"inline\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"void\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"derivative\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"&\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"h\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"&\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \") {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"for\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" i = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; i != n; ++i) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i - \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"] = (i64)\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"h\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] * i % mod;\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[n - \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"] = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"}\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"inline\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"void\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"integrate\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"&\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"h\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"&\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \") {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"for\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" i = n - \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; i; --i) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] = (i64)\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"h\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i - \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"] * \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"inv\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] % mod;\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"] = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \" /* C */\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"}\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"void\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"polyarcsin\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"&\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"h\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"&\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \") {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"  /* arcsin(f) = \\u222B f' / sqrt(1 - f^2) dx  */\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"static\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" t = n << \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"std\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"::\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"copy\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(h, h + n, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"std\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"::\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"fill\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" + n, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" + t, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"DFT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", t);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"for\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" i = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; i != t; ++i) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"sqr\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i]);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"IDFT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", t);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"] = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"sub\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"]);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"for\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" i = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; i != n; ++i)\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"    \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] ? mod - \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] : \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"polysqrt\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", n, f);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"polyinv\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(f, n, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"derivative\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(h, n, f);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"DFT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(f, t);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"DFT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", t);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"for\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" i = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; i != t; ++i) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] = (i64)\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] * \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] % mod;\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"IDFT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", t);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"integrate\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arcsin_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", n, f);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"}\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"void\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"polyarccos\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"&\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"h\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"&\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \") {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"  /* arccos(f) = - \\u222B f' / sqrt(1 - f^2) dx  */\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"polyarcsin\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(h, n, f);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"for\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" i = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; i != n; ++i) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] ? mod - \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] : \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"}\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"void\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"polyarctan\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"&\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"h\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"&\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \") {\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk3\"\n  }), \"  /* arctan(f) = \\u222B f' / (1 + f^2) dx  */\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"static\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"poly_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"const\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" t = n << \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \";\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"std\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"::\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"copy\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(h, h + n, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"std\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"::\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"fill\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" + n, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" + t, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"DFT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", t);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"for\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" i = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; i != t; ++i) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"sqr\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i]);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"IDFT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", t);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"inc\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"], \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"std\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"::\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"fill\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" + n, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" + t, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"polyinv\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", n, f);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"derivative\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(h, n, \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \");\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"DFT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(f, t);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"DFT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", t);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk15\"\n  }), \"for\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" (\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk4\"\n  }), \"int\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \" i = \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk7\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"; i != t; ++i) \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] = (i64)\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk12\"\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] * \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"[i] % mod;\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"IDFT\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", t);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  })), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"  \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk11\"\n  }), \"integrate\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk10\"\n  }), \"arctan_t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \", n, f);\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"grvsc-line\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mtk1\"\n  }), \"}\")))))), mdx(\"style\", null, \".anchorLink.before{position:absolute;top:0;left:0;transform:translateX(-100%);padding-right:4px}.anchorLink.after{display:inline-block;padding-left:4px}h1 .anchorLink svg,h2 .anchorLink svg,h3 .anchorLink svg,h4 .anchorLink svg,h5 .anchorLink svg,h6 .anchorLink svg{visibility:hidden}h1 .anchorLink:focus svg,h1:hover .anchorLink svg,h2 .anchorLink:focus svg,h2:hover .anchorLink svg,h3 .anchorLink:focus svg,h3:hover .anchorLink svg,h4 .anchorLink:focus svg,h4:hover .anchorLink svg,h5 .anchorLink:focus svg,h5:hover .anchorLink svg,h6 .anchorLink:focus svg,h6:hover .anchorLink svg{visibility:visible}a.anchor{display:inline-block;position:relative;top:-159px;visibility:hidden}@media only screen and (max-width:1279.95px){a.anchor{top:-101px}}\"), mdx(\"style\", {\n    \"className\": \"grvsc-styles\"\n  }, \"\\n  .grvsc-container {\\n    overflow: auto;\\n    -webkit-overflow-scrolling: touch;\\n    padding-top: 1rem;\\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\\n    padding-bottom: 1rem;\\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\\n    border-radius: 8px;\\n    border-radius: var(--grvsc-border-radius, 8px);\\n    font-feature-settings: normal;\\n  }\\n  \\n  .grvsc-code {\\n    display: inline-block;\\n    min-width: 100%;\\n  }\\n  \\n  .grvsc-line {\\n    display: inline-block;\\n    box-sizing: border-box;\\n    width: 100%;\\n    padding-left: 1.5rem;\\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\\n    padding-right: 1.5rem;\\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\\n  }\\n  \\n  .grvsc-line-highlighted {\\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\\n  }\\n  \\n  .dark-default-dark {\\n    background-color: #1E1E1E;\\n    color: #D4D4D4;\\n  }\\n  .dark-default-dark .mtk4 { color: #569CD6; }\\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\\n  .dark-default-dark .mtk15 { color: #C586C0; }\\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\\n  .dark-default-dark .mtk3 { color: #6A9955; }\\n\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"Description"},{"value":"Method"},{"value":"Code"}],"frontmatter":{"author":null,"tags":["math","polynomial"],"title":"多项式反三角函数","noMeta":null,"noComment":null,"description":null},"toc":{"items":[{"url":"#description","title":"Description"},{"url":"#method","title":"Method"},{"url":"#code","title":"Code"}]},"parent":{"__typename":"File","relativePath":"math/poly/inv-tri-func.md","modifiedTime":"2020/07/06"},"childrenGrvscCodeBlock":[{"html":"<pre class=\"grvsc-container dark-default-dark\" data-language=\"cpp\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">constexpr</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> maxn = </span><span class=\"mtk7\">262144</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">constexpr</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> mod = </span><span class=\"mtk7\">998244353</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk15\">using</span><span class=\"mtk1\"> </span><span class=\"mtk10\">i64</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">long</span><span class=\"mtk1\"> </span><span class=\"mtk4\">long</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk15\">using</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly_t</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">int</span><span class=\"mtk1\">[maxn];</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk15\">using</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> *</span><span class=\"mtk4\">const</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">inline</span><span class=\"mtk1\"> </span><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">derivative</span><span class=\"mtk1\">(</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">f</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; i != n; ++i) </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = (i64)</span><span class=\"mtk12\">h</span><span class=\"mtk1\">[i] * i % mod;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[n - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">inline</span><span class=\"mtk1\"> </span><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">integrate</span><span class=\"mtk1\">(</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">f</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = n - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; i; --i) </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] = (i64)</span><span class=\"mtk12\">h</span><span class=\"mtk1\">[i - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">] * </span><span class=\"mtk12\">inv</span><span class=\"mtk1\">[i] % mod;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span><span class=\"mtk3\"> /* C */</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">polyarcsin</span><span class=\"mtk1\">(</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">f</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk3\">  /* arcsin(f) = ∫ f&#39; / sqrt(1 - f^2) dx  */</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">static</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly_t</span><span class=\"mtk1\"> </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> t = n &lt;&lt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk11\">copy</span><span class=\"mtk1\">(h, h + n, </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk11\">fill</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\"> + n, </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\"> + t, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, t);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i != t; ++i) </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] = </span><span class=\"mtk11\">sqr</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i]);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IDFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, t);</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; i != n; ++i)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] = </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] ? mod - </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] : </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">polysqrt</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, n, f);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">polyinv</span><span class=\"mtk1\">(f, n, </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">derivative</span><span class=\"mtk1\">(h, n, f);</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(f, t);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, t);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i != t; ++i) </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] = (i64)</span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] * </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] % mod;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IDFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, t);</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">integrate</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, n, f);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">polyarccos</span><span class=\"mtk1\">(</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">f</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk3\">  /* arccos(f) = - ∫ f&#39; / sqrt(1 - f^2) dx  */</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">polyarcsin</span><span class=\"mtk1\">(h, n, f);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i != n; ++i) </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] = </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] ? mod - </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] : </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">polyarctan</span><span class=\"mtk1\">(</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">f</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk3\">  /* arctan(f) = ∫ f&#39; / (1 + f^2) dx  */</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">static</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly_t</span><span class=\"mtk1\"> </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> t = n &lt;&lt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk11\">copy</span><span class=\"mtk1\">(h, h + n, </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk11\">fill</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\"> + n, </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\"> + t, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, t);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i != t; ++i) </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">[i] = </span><span class=\"mtk11\">sqr</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">[i]);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IDFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, t);</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">inc</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">], </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk11\">fill</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\"> + n, </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\"> + t, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">polyinv</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, n, f);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">derivative</span><span class=\"mtk1\">(h, n, </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">);</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(f, t);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, t);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i != t; ++i) </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">[i] = (i64)</span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] * </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">[i] % mod;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IDFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, t);</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">integrate</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, n, f);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span></code></pre>","text":"constexpr int maxn = 262144;\nconstexpr int mod = 998244353;\n\nusing i64 = long long;\nusing poly_t = int[maxn];\nusing poly = int *const;\n\ninline void derivative(const poly &h, const int n, poly &f) {\n  for (int i = 1; i != n; ++i) f[i - 1] = (i64)h[i] * i % mod;\n  f[n - 1] = 0;\n}\n\ninline void integrate(const poly &h, const int n, poly &f) {\n  for (int i = n - 1; i; --i) f[i] = (i64)h[i - 1] * inv[i] % mod;\n  f[0] = 0; /* C */\n}\n\nvoid polyarcsin(const poly &h, const int n, poly &f) {\n  /* arcsin(f) = ∫ f' / sqrt(1 - f^2) dx  */\n  static poly_t arcsin_t;\n  const int t = n << 1;\n  std::copy(h, h + n, arcsin_t);\n  std::fill(arcsin_t + n, arcsin_t + t, 0);\n\n  DFT(arcsin_t, t);\n  for (int i = 0; i != t; ++i) arcsin_t[i] = sqr(arcsin_t[i]);\n  IDFT(arcsin_t, t);\n\n  arcsin_t[0] = sub(1, arcsin_t[0]);\n  for (int i = 1; i != n; ++i)\n    arcsin_t[i] = arcsin_t[i] ? mod - arcsin_t[i] : 0;\n\n  polysqrt(arcsin_t, n, f);\n  polyinv(f, n, arcsin_t);\n  derivative(h, n, f);\n\n  DFT(f, t);\n  DFT(arcsin_t, t);\n  for (int i = 0; i != t; ++i) arcsin_t[i] = (i64)f[i] * arcsin_t[i] % mod;\n  IDFT(arcsin_t, t);\n\n  integrate(arcsin_t, n, f);\n}\n\nvoid polyarccos(const poly &h, const int n, poly &f) {\n  /* arccos(f) = - ∫ f' / sqrt(1 - f^2) dx  */\n  polyarcsin(h, n, f);\n  for (int i = 0; i != n; ++i) f[i] = f[i] ? mod - f[i] : 0;\n}\n\nvoid polyarctan(const poly &h, const int n, poly &f) {\n  /* arctan(f) = ∫ f' / (1 + f^2) dx  */\n  static poly_t arctan_t;\n  const int t = n << 1;\n  std::copy(h, h + n, arctan_t);\n  std::fill(arctan_t + n, arctan_t + t, 0);\n\n  DFT(arctan_t, t);\n  for (int i = 0; i != t; ++i) arctan_t[i] = sqr(arctan_t[i]);\n  IDFT(arctan_t, t);\n\n  inc(arctan_t[0], 1);\n  std::fill(arctan_t + n, arctan_t + t, 0);\n\n  polyinv(arctan_t, n, f);\n  derivative(h, n, arctan_t);\n\n  DFT(f, t);\n  DFT(arctan_t, t);\n  for (int i = 0; i != t; ++i) arctan_t[i] = (i64)f[i] * arctan_t[i] % mod;\n  IDFT(arctan_t, t);\n\n  integrate(arctan_t, n, f);\n}","preClassName":"grvsc-container dark-default-dark","codeClassName":"grvsc-code","tokenizedLines":[{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk4\">constexpr</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> maxn = </span><span class=\"mtk7\">262144</span><span class=\"mtk1\">;</span></span>","text":"constexpr int maxn = 262144;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk4\">constexpr</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> mod = </span><span class=\"mtk7\">998244353</span><span class=\"mtk1\">;</span></span>","text":"constexpr int mod = 998244353;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk15\">using</span><span class=\"mtk1\"> </span><span class=\"mtk10\">i64</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">long</span><span class=\"mtk1\"> </span><span class=\"mtk4\">long</span><span class=\"mtk1\">;</span></span>","text":"using i64 = long long;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk15\">using</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly_t</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">int</span><span class=\"mtk1\">[maxn];</span></span>","text":"using poly_t = int[maxn];"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk15\">using</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> *</span><span class=\"mtk4\">const</span><span class=\"mtk1\">;</span></span>","text":"using poly = int *const;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk4\">inline</span><span class=\"mtk1\"> </span><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">derivative</span><span class=\"mtk1\">(</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">f</span><span class=\"mtk1\">) {</span></span>","text":"inline void derivative(const poly &h, const int n, poly &f) {"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; i != n; ++i) </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = (i64)</span><span class=\"mtk12\">h</span><span class=\"mtk1\">[i] * i % mod;</span></span>","text":"  for (int i = 1; i != n; ++i) f[i - 1] = (i64)h[i] * i % mod;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[n - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>","text":"  f[n - 1] = 0;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>","text":"}"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk4\">inline</span><span class=\"mtk1\"> </span><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">integrate</span><span class=\"mtk1\">(</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">f</span><span class=\"mtk1\">) {</span></span>","text":"inline void integrate(const poly &h, const int n, poly &f) {"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = n - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; i; --i) </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] = (i64)</span><span class=\"mtk12\">h</span><span class=\"mtk1\">[i - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">] * </span><span class=\"mtk12\">inv</span><span class=\"mtk1\">[i] % mod;</span></span>","text":"  for (int i = n - 1; i; --i) f[i] = (i64)h[i - 1] * inv[i] % mod;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span><span class=\"mtk3\"> /* C */</span></span>","text":"  f[0] = 0; /* C */"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>","text":"}"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">polyarcsin</span><span class=\"mtk1\">(</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">f</span><span class=\"mtk1\">) {</span></span>","text":"void polyarcsin(const poly &h, const int n, poly &f) {"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk3\">  /* arcsin(f) = ∫ f&#39; / sqrt(1 - f^2) dx  */</span></span>","text":"  /* arcsin(f) = ∫ f' / sqrt(1 - f^2) dx  */"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">static</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly_t</span><span class=\"mtk1\"> </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">;</span></span>","text":"  static poly_t arcsin_t;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> t = n &lt;&lt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span>","text":"  const int t = n << 1;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk11\">copy</span><span class=\"mtk1\">(h, h + n, </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">);</span></span>","text":"  std::copy(h, h + n, arcsin_t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk11\">fill</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\"> + n, </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\"> + t, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span>","text":"  std::fill(arcsin_t + n, arcsin_t + t, 0);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, t);</span></span>","text":"  DFT(arcsin_t, t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i != t; ++i) </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] = </span><span class=\"mtk11\">sqr</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i]);</span></span>","text":"  for (int i = 0; i != t; ++i) arcsin_t[i] = sqr(arcsin_t[i]);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IDFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, t);</span></span>","text":"  IDFT(arcsin_t, t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]);</span></span>","text":"  arcsin_t[0] = sub(1, arcsin_t[0]);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; i != n; ++i)</span></span>","text":"  for (int i = 1; i != n; ++i)"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] = </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] ? mod - </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] : </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>","text":"    arcsin_t[i] = arcsin_t[i] ? mod - arcsin_t[i] : 0;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">polysqrt</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, n, f);</span></span>","text":"  polysqrt(arcsin_t, n, f);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">polyinv</span><span class=\"mtk1\">(f, n, </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">);</span></span>","text":"  polyinv(f, n, arcsin_t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">derivative</span><span class=\"mtk1\">(h, n, f);</span></span>","text":"  derivative(h, n, f);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(f, t);</span></span>","text":"  DFT(f, t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, t);</span></span>","text":"  DFT(arcsin_t, t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i != t; ++i) </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] = (i64)</span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] * </span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">[i] % mod;</span></span>","text":"  for (int i = 0; i != t; ++i) arcsin_t[i] = (i64)f[i] * arcsin_t[i] % mod;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IDFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, t);</span></span>","text":"  IDFT(arcsin_t, t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">integrate</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arcsin_t</span><span class=\"mtk1\">, n, f);</span></span>","text":"  integrate(arcsin_t, n, f);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>","text":"}"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">polyarccos</span><span class=\"mtk1\">(</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">f</span><span class=\"mtk1\">) {</span></span>","text":"void polyarccos(const poly &h, const int n, poly &f) {"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk3\">  /* arccos(f) = - ∫ f&#39; / sqrt(1 - f^2) dx  */</span></span>","text":"  /* arccos(f) = - ∫ f' / sqrt(1 - f^2) dx  */"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">polyarcsin</span><span class=\"mtk1\">(h, n, f);</span></span>","text":"  polyarcsin(h, n, f);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i != n; ++i) </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] = </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] ? mod - </span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] : </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>","text":"  for (int i = 0; i != n; ++i) f[i] = f[i] ? mod - f[i] : 0;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>","text":"}"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">polyarctan</span><span class=\"mtk1\">(</span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">h</span><span class=\"mtk1\">, </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">poly</span><span class=\"mtk1\"> </span><span class=\"mtk4\">&</span><span class=\"mtk12\">f</span><span class=\"mtk1\">) {</span></span>","text":"void polyarctan(const poly &h, const int n, poly &f) {"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk3\">  /* arctan(f) = ∫ f&#39; / (1 + f^2) dx  */</span></span>","text":"  /* arctan(f) = ∫ f' / (1 + f^2) dx  */"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">static</span><span class=\"mtk1\"> </span><span class=\"mtk10\">poly_t</span><span class=\"mtk1\"> </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">;</span></span>","text":"  static poly_t arctan_t;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> t = n &lt;&lt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span>","text":"  const int t = n << 1;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk11\">copy</span><span class=\"mtk1\">(h, h + n, </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">);</span></span>","text":"  std::copy(h, h + n, arctan_t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk11\">fill</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\"> + n, </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\"> + t, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span>","text":"  std::fill(arctan_t + n, arctan_t + t, 0);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, t);</span></span>","text":"  DFT(arctan_t, t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i != t; ++i) </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">[i] = </span><span class=\"mtk11\">sqr</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">[i]);</span></span>","text":"  for (int i = 0; i != t; ++i) arctan_t[i] = sqr(arctan_t[i]);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IDFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, t);</span></span>","text":"  IDFT(arctan_t, t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">inc</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">], </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span>","text":"  inc(arctan_t[0], 1);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk11\">fill</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\"> + n, </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\"> + t, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span>","text":"  std::fill(arctan_t + n, arctan_t + t, 0);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">polyinv</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, n, f);</span></span>","text":"  polyinv(arctan_t, n, f);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">derivative</span><span class=\"mtk1\">(h, n, </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">);</span></span>","text":"  derivative(h, n, arctan_t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(f, t);</span></span>","text":"  DFT(f, t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">DFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, t);</span></span>","text":"  DFT(arctan_t, t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> i = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; i != t; ++i) </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">[i] = (i64)</span><span class=\"mtk12\">f</span><span class=\"mtk1\">[i] * </span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">[i] % mod;</span></span>","text":"  for (int i = 0; i != t; ++i) arctan_t[i] = (i64)f[i] * arctan_t[i] % mod;"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">IDFT</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, t);</span></span>","text":"  IDFT(arctan_t, t);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"></span>","text":""},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk11\">integrate</span><span class=\"mtk1\">(</span><span class=\"mtk10\">arctan_t</span><span class=\"mtk1\">, n, f);</span></span>","text":"  integrate(arctan_t, n, f);"},{"className":"grvsc-line","html":"<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>","text":"}"}]}]}},"pageContext":{"id":"ac937c23-e877-5977-9a6a-53d64bb5c44b","previous":{"node":{"fields":{"slug":"/math/poly/tri-func/"},"id":"c75da4b1-c28e-520d-889a-8055eeec7b0b","frontmatter":{"tags":["math","polynomial"]}}},"next":{"node":{"fields":{"slug":"/math/poly/multipoint-eval-interpolation/"},"id":"71f46987-1fdb-5182-9063-9d2be161f1fa","frontmatter":{"tags":["math","polynomial"]}}}}}}